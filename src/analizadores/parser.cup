package analizadores;
import java_cup.runtime.*;
import java.util.ArrayList;

parser code 
{:
	/*Method that is called when parser can be recovered*/
	public void syntax_error(Symbol s){ 
            System.out.println("\u001B[31m" + "Error sintactico: " +s.value+"\u001B[0m"); 
            //Instruction.lista.addError(new Error_("Sintactico error: "+s.value, "Sintactico"));
    }
	/*Method that is called when parser can't be recovered*/
	public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
            System.out.println("\u001B[31m"+"Error sintactico uncovered: " +s.value+"\u001B[0m"); 
            //Instruction.lista.addError(new Error_("Sintactico error: "+s.value, "Sintactico"));
    } 
:}

//Parte 1 terminales
terminal String COMMENT;
terminal String IDENTIFICADOR;
terminal String NUMERO;
terminal String AZMINUS;
terminal String AZMAYUS;
terminal String NOTACIONCOMAS;
terminal String POLACA;
terminal String CADENA;
terminal String SIMBOLO;

//Parte 2 terminales
terminal String LLAVELEFT;
terminal String LLAVERIGHT;
terminal String PUNTOYCOMA;
terminal String CAMBIOSECCION;
terminal String GUION;
terminal String MAYOR;
terminal String DOSPUNTOS;
terminal String ONDULADO;
terminal String CONJ;
//terminal String SALTODELINEA;

//No terminales
non terminal inicio;
non terminal expresion;
non terminal conjunto;
non terminal regulares;
non terminal evaluar;
non terminal comentario;

start with inicio; 

inicio ::= LLAVELEFT expresion LLAVERIGHT inicio
    | LLAVELEFT expresion LLAVERIGHT
    | comentario inicio
    | comentario
    //| SALTODELINEA inicio
    //| SALTODELINEA
;

expresion ::= conjunto expresion
    | conjunto
    | regulares expresion
    | regulares
    | CAMBIOSECCION expresion
    | evaluar expresion
    | evaluar
    | comentario expresion
    //| SALTODELINEA expresion
    //| SALTODELINEA 
;

comentario ::= COMMENT:a {: Proyecto1_Compi.Menu.comentarios.insertar(a); :} //System.out.println("Comentario: "+a);
;

conjunto ::= CONJ DOSPUNTOS IDENTIFICADOR:a GUION MAYOR AZMINUS:b ONDULADO AZMINUS:c PUNTOYCOMA {: Proyecto1_Compi.Menu.conjuntos.insertar(a+": "+b+"-"+c); :} //System.out.println(a+" :-: " + b + " :-: "+c);
    | CONJ DOSPUNTOS IDENTIFICADOR:a GUION MAYOR AZMAYUS:b ONDULADO AZMAYUS:c PUNTOYCOMA {: Proyecto1_Compi.Menu.conjuntos.insertar(a+": "+b+"-"+c); :} //System.out.println(a+" :-: " + b + " :-: "+c);
    | CONJ DOSPUNTOS IDENTIFICADOR:a GUION MAYOR NUMERO:b ONDULADO NUMERO:c PUNTOYCOMA {: Proyecto1_Compi.Menu.conjuntos.insertar(a+": "+b+"-"+c); :} //System.out.println(a+" :-: " + b + " :-: "+c);
    | CONJ DOSPUNTOS IDENTIFICADOR:a GUION MAYOR NOTACIONCOMAS:b PUNTOYCOMA {: Proyecto1_Compi.Menu.conjuntos.insertar(a+": "+b); :} //System.out.println(a+" :-: "+b);
    | CONJ DOSPUNTOS IDENTIFICADOR:a GUION MAYOR SIMBOLO:b ONDULADO SIMBOLO:c PUNTOYCOMA {: Proyecto1_Compi.Menu.conjuntos.insertar(a+": "+b+"-"+c); :} //System.out.println(a+" :-: " + b + " :-: "+c);
;

regulares ::= IDENTIFICADOR:a GUION MAYOR POLACA:b PUNTOYCOMA {: Proyecto1_Compi.Menu.expRegulares.insertar(a+": "+b); :} //System.out.println(a+" :-: "+b);
;

evaluar ::= IDENTIFICADOR:a DOSPUNTOS CADENA:b PUNTOYCOMA {: Proyecto1_Compi.Menu.cadenasEntrada.insertar(a+": "+b); :} //System.out.println(a+" :-: "+b);
;
